"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const db_1 = require("./db");
async function updateUser(user) {
    const db = await db_1.getDB();
    const disconnectPreviouslyConnectedFeatures = db.user.update({
        where: { id: user.id },
        data: {
            features: {
                set: [] // disconnecting all previous features
            }
        }
    });
    const connectOrCreateNewFeatures = db.user.update({
        where: { id: user.id },
        data: {
            username: user.username,
            age: user.age,
            bio: user.bio,
            genderM: user.genderM,
            genderF: user.genderF,
            profileEmoji: user.profileEmoji,
            features: {
                connectOrCreate: [
                    {
                        where: {
                            emoji: user.features[0]
                        }, create: {
                            emoji: user.features[0]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[1]
                        }, create: {
                            emoji: user.features[1]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[2]
                        }, create: {
                            emoji: user.features[2]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[3]
                        }, create: {
                            emoji: user.features[3]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[4]
                        }, create: {
                            emoji: user.features[4]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[5]
                        }, create: {
                            emoji: user.features[5]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[6]
                        }, create: {
                            emoji: user.features[6]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[7]
                        }, create: {
                            emoji: user.features[7]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[8]
                        }, create: {
                            emoji: user.features[8]
                        }
                    },
                    {
                        where: {
                            emoji: user.features[9]
                        }, create: {
                            emoji: user.features[9]
                        }
                    }
                ]
            }
        }
    });
    // transaction to ensure either BOTH operations happen or NONE of them happen.
    await db.$transaction([disconnectPreviouslyConnectedFeatures, connectOrCreateNewFeatures]);
}
exports.default = updateUser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInVwZGF0ZVVzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSw2QkFBNEI7QUFFNUIsS0FBSyxVQUFVLFVBQVUsQ0FBQyxJQUFVO0lBRWhDLE1BQU0sRUFBRSxHQUFHLE1BQU0sVUFBSyxFQUFFLENBQUE7SUFFeEIsTUFBTSxxQ0FBcUMsR0FBSSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxRCxLQUFLLEVBQUUsRUFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBQztRQUNwQixJQUFJLEVBQUU7WUFDRixRQUFRLEVBQUU7Z0JBQ04sR0FBRyxFQUFFLEVBQUUsQ0FBRSxzQ0FBc0M7YUFDbEQ7U0FDSjtLQUNKLENBQUMsQ0FBQTtJQUVGLE1BQU0sMEJBQTBCLEdBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDL0MsS0FBSyxFQUFFLEVBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUM7UUFDcEIsSUFBSSxFQUFFO1lBQ0YsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRztZQUNiLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRztZQUNiLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztZQUNyQixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDckIsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZO1lBQy9CLFFBQVEsRUFBRTtnQkFDTixlQUFlLEVBQUU7b0JBQ2I7d0JBQ0ksS0FBSyxFQUFFOzRCQUNILEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUIsRUFBRSxNQUFNLEVBQUU7NEJBQ1AsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDSjtvQkFDRDt3QkFDSSxLQUFLLEVBQUU7NEJBQ0gsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQixFQUFFLE1BQU0sRUFBRTs0QkFDUCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCO3FCQUNKO29CQUNEO3dCQUNJLEtBQUssRUFBRTs0QkFDSCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCLEVBQUUsTUFBTSxFQUFFOzRCQUNQLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUI7cUJBQ0o7b0JBQ0Q7d0JBQ0ksS0FBSyxFQUFFOzRCQUNILEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUIsRUFBRSxNQUFNLEVBQUU7NEJBQ1AsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDSjtvQkFDRDt3QkFDSSxLQUFLLEVBQUU7NEJBQ0gsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQixFQUFFLE1BQU0sRUFBRTs0QkFDUCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCO3FCQUNKO29CQUNEO3dCQUNJLEtBQUssRUFBRTs0QkFDSCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCLEVBQUUsTUFBTSxFQUFFOzRCQUNQLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUI7cUJBQ0o7b0JBQ0Q7d0JBQ0ksS0FBSyxFQUFFOzRCQUNILEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUIsRUFBRSxNQUFNLEVBQUU7NEJBQ1AsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDSjtvQkFDRDt3QkFDSSxLQUFLLEVBQUU7NEJBQ0gsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQixFQUFFLE1BQU0sRUFBRTs0QkFDUCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCO3FCQUNKO29CQUNEO3dCQUNJLEtBQUssRUFBRTs0QkFDSCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7eUJBQzFCLEVBQUUsTUFBTSxFQUFFOzRCQUNQLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUI7cUJBQ0o7b0JBQ0Q7d0JBQ0ksS0FBSyxFQUFFOzRCQUNILEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt5QkFDMUIsRUFBRSxNQUFNLEVBQUU7NEJBQ1AsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDSjtpQkFDSjthQUNKO1NBQ0o7S0FDSixDQUFDLENBQUE7SUFFRiw4RUFBOEU7SUFDOUUsTUFBTSxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMscUNBQXFDLEVBQUUsMEJBQTBCLENBQUUsQ0FBQyxDQUFBO0FBQy9GLENBQUM7QUFFRCxrQkFBZSxVQUFVLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi90eXBlcydcbmltcG9ydCB7IGdldERCIH0gZnJvbSAnLi9kYidcblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlVXNlcih1c2VyOiBVc2VyKSB7XG5cbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERCKClcbiAgICBcbiAgICBjb25zdCBkaXNjb25uZWN0UHJldmlvdXNseUNvbm5lY3RlZEZlYXR1cmVzID0gIGRiLnVzZXIudXBkYXRlKHtcbiAgICAgICAgd2hlcmU6IHtpZDogdXNlci5pZH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGZlYXR1cmVzOiB7XG4gICAgICAgICAgICAgICAgc2V0OiBbXSAgLy8gZGlzY29ubmVjdGluZyBhbGwgcHJldmlvdXMgZmVhdHVyZXNcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgY29ubmVjdE9yQ3JlYXRlTmV3RmVhdHVyZXMgPSAgZGIudXNlci51cGRhdGUoe1xuICAgICAgICB3aGVyZToge2lkOiB1c2VyLmlkfSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsXG4gICAgICAgICAgICBhZ2U6IHVzZXIuYWdlLFxuICAgICAgICAgICAgYmlvOiB1c2VyLmJpbyxcbiAgICAgICAgICAgIGdlbmRlck06IHVzZXIuZ2VuZGVyTSxcbiAgICAgICAgICAgIGdlbmRlckY6IHVzZXIuZ2VuZGVyRixcbiAgICAgICAgICAgIHByb2ZpbGVFbW9qaTogdXNlci5wcm9maWxlRW1vamksXG4gICAgICAgICAgICBmZWF0dXJlczoge1xuICAgICAgICAgICAgICAgIGNvbm5lY3RPckNyZWF0ZTogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1swXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzFdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1sxXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzJdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1syXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzNdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1szXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzRdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s0XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzVdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s1XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzZdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s2XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzddXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s3XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzhdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s4XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppOiB1c2VyLmZlYXR1cmVzWzldXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbW9qaTogdXNlci5mZWF0dXJlc1s5XVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbiAgICBcbiAgICAvLyB0cmFuc2FjdGlvbiB0byBlbnN1cmUgZWl0aGVyIEJPVEggb3BlcmF0aW9ucyBoYXBwZW4gb3IgTk9ORSBvZiB0aGVtIGhhcHBlbi5cbiAgICBhd2FpdCBkYi4kdHJhbnNhY3Rpb24oW2Rpc2Nvbm5lY3RQcmV2aW91c2x5Q29ubmVjdGVkRmVhdHVyZXMsIGNvbm5lY3RPckNyZWF0ZU5ld0ZlYXR1cmVzIF0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IHVwZGF0ZVVzZXIiXX0=